---
name: tmux
run-name: tmux-${{inputs.tmux}}-${{inputs.baseos}}

on:
  workflow_dispatch:
    inputs:
      baseos:
        required: true
        description: base image os
        default: xenial
        type: string
      tmux:
        required: true
        description: tmux version
        default: 3.3a
        type: string

permissions: write-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    name: tmux ${{inputs.tmux}} (${{matrix.arch}})
    steps:
      - uses: actions/checkout@v4

      - name: Get musl version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="$(gh api /repos/bminor/musl/tags --jq '.[0].name')"
          echo "musl=${VERSION#v}" >> $GITHUB_ENV

      - name: Get libevent version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="$(gh api /repos/libevent/libevent/releases/latest --jq .tag_name)"
          echo "libevent=${VERSION#release-}" >> $GITHUB_ENV

      - name: Get ncurses version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "ncurses=$(gh api /repos/mirror/ncurses/tags --jq '.[0].name')" >> $GITHUB_ENV

      - name: Get upx version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="$(gh api /repos/upx/upx/tags --jq '.[0].name')"
          echo "upx=${VERSION#v}" >> $GITHUB_ENV

      - name: Print versions
        run: |
          echo "musl=${{env.musl}}"
          echo "libevent=${{env.libevent}}"
          echo "ncurses=${{env.ncurses}}"
          echo "upx=${{env.upx}}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to GHCR
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@master
        with:
          context: .
          file: Dockerfile
          platforms: linux/${{matrix.arch}}
          build-args: |
            BASEOS=${{inputs.baseos}}
            MUSL_VERSION=${{env.musl}}
            LIBEVENT_VERSION=${{env.libevent}}
            NCURSES_VERSION=${{env.ncurses}}
            TMUX_VERSION=${{inputs.tmux}}
            UPX_VERSION=${{env.upx}}
          push: false
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:tmux-${{inputs.tmux}}-musl-${{env.musl}}-libevent-${{env.libevent}}-ncurses-${{env.ncurses}}-upx-${{env.upx}}-${{inputs.baseos}}-${{matrix.arch}}
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:tmux-${{inputs.tmux}}-musl-${{env.musl}}-libevent-${{env.libevent}}-ncurses-${{env.ncurses}}-upx-${{env.upx}}-${{inputs.baseos}}-${{matrix.arch}},mode=max
          outputs: type=local,dest=./

      - name: Upload ${{matrix.arch}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          ls -R
          mv tmux "tmux-${{inputs.tmux}}-linux-${{matrix.arch}}"
          # create release if not exist
          gh release create "${{inputs.tmux}}" --notes "Release tmux ${{inputs.tmux}}" --title "tmux-${{inputs.tmux}}" --repo "${{github.repository}}" || true
          # delete the asset if exists
          gh release delete-asset "${{inputs.tmux}}" "tmux-${{inputs.tmux}}-linux-${{matrix.arch}}" --yes --repo "${{github.repository}}" || true
          gh release upload "${{inputs.tmux}}" "./tmux-${{inputs.tmux}}-linux-${{matrix.arch}}" --repo "${{github.repository}}"

          mv tmux-upx "tmux-upx-${{inputs.tmux}}-linux-${{matrix.arch}}"
          # create release if not exist
          gh release create "${{inputs.tmux}}" --notes "Release tmux ${{inputs.tmux}}" --title "tmux-${{inputs.tmux}}" --repo "${{github.repository}}" || true
          # delete the asset if exists
          gh release delete-asset "${{inputs.tmux}}" "tmux-upx-${{inputs.tmux}}-linux-${{matrix.arch}}" --yes --repo "${{github.repository}}" || true
          gh release upload "${{inputs.tmux}}" "./tmux-upx-${{inputs.tmux}}-linux-${{matrix.arch}}" --repo "${{github.repository}}"
